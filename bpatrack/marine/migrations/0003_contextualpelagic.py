# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-03-10 22:35
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('marine', '0002_samplestatetrack'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContextualPelagic',
            fields=[
                ('bpa_id', models.IntegerField(primary_key=True, serialize=False, verbose_name='BPA ID')),
                ('date_sampled', models.DateField(verbose_name='Date Sampled')),
                ('time_sampled', models.TimeField(verbose_name='Time Sampled')),
                ('lat', models.DecimalField(decimal_places=6, max_digits=9, verbose_name='Latitude')),
                ('lon', models.DecimalField(decimal_places=6, max_digits=9, verbose_name='Longitude')),
                ('dept', models.IntegerField(verbose_name='Depth')),
                ('location_description', models.TextField(blank=True, verbose_name='Location Description')),
                ('note', models.TextField(blank=True, verbose_name='Host Species')),
                ('ph', models.IntegerField(verbose_name='pH Level H20')),
                ('oxygen', models.IntegerField(verbose_name='Oxygen (μmol/L) Lab')),
                ('oxygen_ctd', models.IntegerField(verbose_name='Oxygen (ml/L) CDT')),
                ('nitrate', models.IntegerField(verbose_name='Nitrate/Nitrite (μmol/L)')),
                ('phosphate', models.IntegerField(verbose_name='Phosphate (μmol/L)')),
                ('ammonium', models.IntegerField(verbose_name='Ammonium (μmol/L)')),
                ('co2_total', models.IntegerField(verbose_name='Total CO2 (μmol/kg)')),
                ('alkalinity_total', models.IntegerField(verbose_name='Total alkalinity (μmol/kg)')),
                ('temperature', models.IntegerField(verbose_name='Temperature [ITS-90, deg C]')),
                ('condictivity', models.IntegerField(verbose_name='Conductivity [S/m]')),
                ('turbitity', models.IntegerField(verbose_name='Turbidity (Upoly 0, WET Labs FLNTURT)')),
                ('salinity', models.IntegerField(verbose_name='Salinity [PSU] Laboratory')),
                ('microbial_abandance', models.IntegerField(verbose_name='Microbial abundance (cells per ml)')),
                ('chlorophyl', models.IntegerField(verbose_name='Chlorophyll a (μg/L)')),
                ('carbon_total', models.IntegerField(verbose_name='% total carbon')),
                ('inorganic_carbon_total', models.IntegerField(verbose_name='% total inorganc carbon')),
                ('flux', models.IntegerField(verbose_name='Light intensity (lux)')),
            ],
            options={
                'verbose_name': 'Pelagic marine Contextual Data',
            },
        ),
    ]
