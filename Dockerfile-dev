# -*- coding: utf-8 -*-
FROM muccg/bpatrack-build
MAINTAINER https://github.com/muccg/bpa-track/

ENV DJANGO_SETTINGS_MODULE bpatrack.config.settings.local
ENV DATABASE_URL=postgis://webapp:webapp@db:5432/webapp

# At build time changing these args allow us to use a local devpi mirror
# Unchanged, these defaults allow pip to behave as normal
ARG ARG_PIP_OPTS="--no-cache-dir"
ARG ARG_PIP_INDEX_URL="https://pypi.python.org/simple"
ARG ARG_PIP_TRUSTED_HOST="127.0.0.1"

# Runtime args, don't re-use build time args
ENV DEPLOYMENT dev
ENV PRODUCTION 0
ENV DEBUG 1
ENV PIP_OPTS="--no-cache-dir"
ENV PIP_INDEX_URL=ARG_PIP_INDEX_URL
ENV PIP_TRUSTED_HOST=ARG_PIP_TRUSTED_HOST

# For dev we use root so we can shell in and do evil things
USER root
WORKDIR /app

# Strictly speaking not needed as we mount over the top
# However let's make it explicit that we don't want /app from the build image
RUN rm -rf /app && mkdir -p /app
ARG PIP_OPTS="--no-cache-dir"

# install python deps
COPY ./requirements/* /app/requirements/

# Add our python deps in multiple docker layers
RUN NO_PROXY=${ARG_PIP_TRUSTED_HOST} pip ${ARG_PIP_OPTS} --trusted-host ${ARG_PIP_TRUSTED_HOST} install -i ${ARG_PIP_INDEX_URL} --upgrade -r requirements/test.txt
RUN NO_PROXY=${ARG_PIP_TRUSTED_HOST} pip ${ARG_PIP_OPTS} --trusted-host ${ARG_PIP_TRUSTED_HOST} install -i ${ARG_PIP_INDEX_URL} --upgrade -r requirements/production.txt
RUN NO_PROXY=${ARG_PIP_TRUSTED_HOST} pip ${ARG_PIP_OPTS} --trusted-host ${ARG_PIP_TRUSTED_HOST} install -i ${ARG_PIP_INDEX_URL} --upgrade -r requirements/dev.txt
RUN NO_PROXY=${ARG_PIP_TRUSTED_HOST} pip ${ARG_PIP_OPTS} --trusted-host ${ARG_PIP_TRUSTED_HOST} install -i ${ARG_PIP_INDEX_URL} --upgrade -r requirements/base.txt

# Copy code and install the app
COPY . /app
RUN pip ${PIP_OPTS} install -e .

EXPOSE 8000 9000 9001 9100 9101
VOLUME ["/app", "/data"]

# Allow celery to run as root for dev
ENV C_FORCE_ROOT=1
ENV HOME /data
WORKDIR /data

# entrypoint shell script that by default starts runserver
ENTRYPOINT ["/app/docker-entrypoint.sh"]
CMD ["runserver"]
